/*
    Cuando usamos display:flex; por defecto nos va a poner los elementos hijos de manera horizontal, si nosotros queremos volver a ponerlos verticales, tendremos que invertir el main axis con el cross axis, y usaremos la regla flex-direction:column;

    flex-grow: (espacio asignado minimo + sobrante/grows)(main axis) lo que hace es asignarle a cada elemento hijo el espacio sobrante para que se llegue a ocupar el espacio total. EJEMPLO= si 3 cajas tienen flex-grow:1; se divide el espacio sobrante entre 3 y se le asigna el mismo a cada caja, pero si hay 2 cajas y una tiene un flex-grow:1; y la otra un flex-grow:2;, lo que va a pasar es que el espacio sobrante se divide en 3 partes y se le asigna una parte a la primer caja y 2 partes a la segunda.
*/


*{
    box-sizing: border-box;
    margin: 0;
}

body{
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgb(28, 51, 69);
    color: rgb(122, 226, 240);
    font-family: 'Courier New', Courier, monospace

}

.conteiner {
    background-color: rgb(42, 54, 90);
    color: rgb(28, 51, 69);
    height: 500px;
    width: 80vw;
    display: flex;    
    font-weight: 900;
    border-radius: 20px;
    overflow: hidden;
}

.box {
    width: 200px;
    height: 200px;
    margin-bottom: 20px;
    font-size: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 10px;
    border-radius: 20px;
}

.box-1 {
    background-color: rosybrown;
    flex-grow: 1;
}

.box-2 {
    background-color: royalblue;
    flex-grow: 2;
}

.box-3 {
    background-color: lightsalmon;
}
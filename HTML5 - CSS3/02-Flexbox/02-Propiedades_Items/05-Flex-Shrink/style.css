/*
    Cuando usamos display:flex; por defecto nos va a poner los elementos hijos de manera horizontal, si nosotros queremos volver a ponerlos verticales, tendremos que invertir el main axis con el cross axis, y usaremos la regla flex-direction:column;

    flex-shrink: Decide que espacio va a ocupar cada elemento hijo y cuanto va a ceder cada uno cuando se achique el espacio, por defecto el valor es 1 (todas ceden lo mismo y se achican en la misma proporcion), pero si le doy a alguno un valor de 2 se va a achicar mas que los demas elementos, permitiendoles que ocupen mas espacio. (No funciona si el contenedor tiene Flex-wrap:wrap)
*/


*{
    box-sizing: border-box;
    margin: 0;
}

body{
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgb(28, 51, 69);
    color: rgb(122, 226, 240);
    font-family: 'Courier New', Courier, monospace

}

.conteiner {
    background-color: rgb(42, 54, 90);
    color: rgb(28, 51, 69);
    height: 500px;
    width: 98vw;
    display: flex;    
    font-weight: 900;
    border-radius: 20px;
    animation: anime 5s 1s infinite alternate;
}

p{
    text-align: center;
}

.box {
    height: 200px;
    margin-bottom: 20px;
    font-size: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 10px;
    min-width: 150px;
    width: 300px;
    border-radius: 20px;
}

.box-1 {
    background-color: rosybrown;
    flex-shrink: 3;
}

.box-2 {
    background-color: royalblue;
}

.box-3 {
    background-color: lightsalmon;
}

@keyframes anime {
    0%{
        width: 98vw;          
    }
    50%{
        width: 75vw;         
    }
    100%{
        width: 50vw;        
    }
    
}